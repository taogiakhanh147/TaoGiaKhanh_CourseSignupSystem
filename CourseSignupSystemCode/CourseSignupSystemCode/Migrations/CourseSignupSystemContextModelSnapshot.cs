// <auto-generated />
using System;
using CourseSignupSystemCode.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CourseSignupSystemCode.Migrations
{
    [DbContext(typeof(CourseSignupSystemContext))]
    partial class CourseSignupSystemContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.25")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CourseSignupSystemCode.Models.Class", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("ClassNO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClassName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Fee")
                        .HasColumnType("int");

                    b.Property<int>("IDCourse")
                        .HasColumnType("int");

                    b.Property<int>("IDFaculty")
                        .HasColumnType("int");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NumberOfStudent")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("IDCourse");

                    b.HasIndex("IDFaculty");

                    b.ToTable("Class");
                });

            modelBuilder.Entity("CourseSignupSystemCode.Models.Course", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("CourseNO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CourseName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Stage")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Course");
                });

            modelBuilder.Entity("CourseSignupSystemCode.Models.Department", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("DepartmentName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Department");
                });

            modelBuilder.Entity("CourseSignupSystemCode.Models.Faculty", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("FacultyName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Faculty");
                });

            modelBuilder.Entity("CourseSignupSystemCode.Models.Holiday", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<DateTime?>("EndDay")
                        .HasColumnType("datetime2");

                    b.Property<string>("HolidayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Reason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("StartDay")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.ToTable("Holiday");
                });

            modelBuilder.Entity("CourseSignupSystemCode.Models.Result", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<int>("IDStudent")
                        .HasColumnType("int");

                    b.Property<int>("IDSubject")
                        .HasColumnType("int");

                    b.Property<int?>("Score")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("IDStudent");

                    b.ToTable("Result");
                });

            modelBuilder.Entity("CourseSignupSystemCode.Models.Role", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("RoleName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("CourseSignupSystemCode.Models.Salary", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<int?>("Allowance")
                        .HasColumnType("int");

                    b.Property<int>("IDClass")
                        .HasColumnType("int");

                    b.Property<int>("IDTeacher")
                        .HasColumnType("int");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SalaryNet")
                        .HasColumnType("int");

                    b.Property<int?>("SalaryPercent")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("IDClass");

                    b.ToTable("Salary");
                });

            modelBuilder.Entity("CourseSignupSystemCode.Models.Schedule", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("ClassRoom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IDStudent")
                        .HasColumnType("int");

                    b.Property<int>("IDSubject")
                        .HasColumnType("int");

                    b.Property<string>("Stage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StudyDay")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StudyTime")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("IDStudent");

                    b.HasIndex("IDSubject");

                    b.ToTable("Schedule");
                });

            modelBuilder.Entity("CourseSignupSystemCode.Models.ScoreType", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<int?>("ScoreScale")
                        .HasColumnType("int");

                    b.Property<string>("ScoreTypeName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("ScoreType");
                });

            modelBuilder.Entity("CourseSignupSystemCode.Models.ScoreTypeSubject", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<int?>("GradingColumn")
                        .HasColumnType("int");

                    b.Property<int>("IDCourse")
                        .HasColumnType("int");

                    b.Property<int>("IDScoreType")
                        .HasColumnType("int");

                    b.Property<int>("IDSubject")
                        .HasColumnType("int");

                    b.Property<int?>("RequiredGradeColumns")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("IDCourse");

                    b.HasIndex("IDScoreType");

                    b.HasIndex("IDSubject");

                    b.ToTable("ScoreTypeSubject");
                });

            modelBuilder.Entity("CourseSignupSystemCode.Models.Student", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullNameOfParent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IDClass")
                        .HasColumnType("int");

                    b.Property<int>("IDRole")
                        .HasColumnType("int");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MiddleAndFirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sex")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("IDClass");

                    b.HasIndex("IDRole");

                    b.ToTable("Student");
                });

            modelBuilder.Entity("CourseSignupSystemCode.Models.Subject", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<int>("IDDepartment")
                        .HasColumnType("int");

                    b.Property<string>("SubjectNO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubjectName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("IDDepartment");

                    b.ToTable("Subject");
                });

            modelBuilder.Entity("CourseSignupSystemCode.Models.Teacher", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IDRole")
                        .HasColumnType("int");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MainSubject")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MiddleAndFirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PartTimeSubject")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sex")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TaxCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("IDRole");

                    b.ToTable("Teacher");
                });

            modelBuilder.Entity("CourseSignupSystemCode.Models.TeachingSchedule", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("ClassRoom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IDClass")
                        .HasColumnType("int");

                    b.Property<int>("IDSubject")
                        .HasColumnType("int");

                    b.Property<int>("IDTeacher")
                        .HasColumnType("int");

                    b.Property<string>("Stage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TeachDay")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TeachTime")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("IDClass");

                    b.HasIndex("IDSubject");

                    b.HasIndex("IDTeacher");

                    b.ToTable("TeachingSchedule");
                });

            modelBuilder.Entity("CourseSignupSystemCode.Models.Tuition", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<int?>("Discount")
                        .HasColumnType("int");

                    b.Property<int>("IDClass")
                        .HasColumnType("int");

                    b.Property<int>("IDStudent")
                        .HasColumnType("int");

                    b.Property<int>("IDTuitionType")
                        .HasColumnType("int");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TuitionFee")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("IDStudent");

                    b.HasIndex("IDTuitionType");

                    b.ToTable("Tuition");
                });

            modelBuilder.Entity("CourseSignupSystemCode.Models.TuitionType", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("TuitionTypeName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("TuitionType");
                });

            modelBuilder.Entity("CourseSignupSystemCode.Models.User", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("EMail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IDRole")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ịmage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("IDRole");

                    b.ToTable("User");
                });

            modelBuilder.Entity("CourseSignupSystemCode.Models.Class", b =>
                {
                    b.HasOne("CourseSignupSystemCode.Models.Course", "Course")
                        .WithMany("Classes")
                        .HasForeignKey("IDCourse")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CourseSignupSystemCode.Models.Faculty", "Faculty")
                        .WithMany("Classes")
                        .HasForeignKey("IDFaculty")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Faculty");
                });

            modelBuilder.Entity("CourseSignupSystemCode.Models.Result", b =>
                {
                    b.HasOne("CourseSignupSystemCode.Models.Student", "Student")
                        .WithMany("Results")
                        .HasForeignKey("IDStudent")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");
                });

            modelBuilder.Entity("CourseSignupSystemCode.Models.Salary", b =>
                {
                    b.HasOne("CourseSignupSystemCode.Models.Class", "Class")
                        .WithMany("Salaries")
                        .HasForeignKey("IDClass")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Class");
                });

            modelBuilder.Entity("CourseSignupSystemCode.Models.Schedule", b =>
                {
                    b.HasOne("CourseSignupSystemCode.Models.Student", "Student")
                        .WithMany("Schedules")
                        .HasForeignKey("IDStudent")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CourseSignupSystemCode.Models.Subject", "Subject")
                        .WithMany("Schedules")
                        .HasForeignKey("IDSubject")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("CourseSignupSystemCode.Models.ScoreTypeSubject", b =>
                {
                    b.HasOne("CourseSignupSystemCode.Models.Course", "Course")
                        .WithMany("ScoreTypeSubjects")
                        .HasForeignKey("IDCourse")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CourseSignupSystemCode.Models.ScoreType", "ScoreType")
                        .WithMany("ScoreTypeSubjects")
                        .HasForeignKey("IDScoreType")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CourseSignupSystemCode.Models.Subject", "Subject")
                        .WithMany("ScoreTypeSubjects")
                        .HasForeignKey("IDSubject")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("ScoreType");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("CourseSignupSystemCode.Models.Student", b =>
                {
                    b.HasOne("CourseSignupSystemCode.Models.Class", "Class")
                        .WithMany("Students")
                        .HasForeignKey("IDClass")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CourseSignupSystemCode.Models.Role", "Role")
                        .WithMany("Students")
                        .HasForeignKey("IDRole")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Class");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("CourseSignupSystemCode.Models.Subject", b =>
                {
                    b.HasOne("CourseSignupSystemCode.Models.Department", "Department")
                        .WithMany("Subjects")
                        .HasForeignKey("IDDepartment")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("CourseSignupSystemCode.Models.Teacher", b =>
                {
                    b.HasOne("CourseSignupSystemCode.Models.Role", "Role")
                        .WithMany("Teachers")
                        .HasForeignKey("IDRole")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("CourseSignupSystemCode.Models.TeachingSchedule", b =>
                {
                    b.HasOne("CourseSignupSystemCode.Models.Class", "Class")
                        .WithMany("TeachingSchedules")
                        .HasForeignKey("IDClass")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CourseSignupSystemCode.Models.Subject", "Subject")
                        .WithMany("TeachingSchedules")
                        .HasForeignKey("IDSubject")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CourseSignupSystemCode.Models.Teacher", "Teacher")
                        .WithMany("teachingSchedules")
                        .HasForeignKey("IDTeacher")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Class");

                    b.Navigation("Subject");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("CourseSignupSystemCode.Models.Tuition", b =>
                {
                    b.HasOne("CourseSignupSystemCode.Models.Student", "Student")
                        .WithMany("Tuitions")
                        .HasForeignKey("IDStudent")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CourseSignupSystemCode.Models.TuitionType", "TuitionType")
                        .WithMany("Tuitions")
                        .HasForeignKey("IDTuitionType")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");

                    b.Navigation("TuitionType");
                });

            modelBuilder.Entity("CourseSignupSystemCode.Models.User", b =>
                {
                    b.HasOne("CourseSignupSystemCode.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("IDRole")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("CourseSignupSystemCode.Models.Class", b =>
                {
                    b.Navigation("Salaries");

                    b.Navigation("Students");

                    b.Navigation("TeachingSchedules");
                });

            modelBuilder.Entity("CourseSignupSystemCode.Models.Course", b =>
                {
                    b.Navigation("Classes");

                    b.Navigation("ScoreTypeSubjects");
                });

            modelBuilder.Entity("CourseSignupSystemCode.Models.Department", b =>
                {
                    b.Navigation("Subjects");
                });

            modelBuilder.Entity("CourseSignupSystemCode.Models.Faculty", b =>
                {
                    b.Navigation("Classes");
                });

            modelBuilder.Entity("CourseSignupSystemCode.Models.Role", b =>
                {
                    b.Navigation("Students");

                    b.Navigation("Teachers");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("CourseSignupSystemCode.Models.ScoreType", b =>
                {
                    b.Navigation("ScoreTypeSubjects");
                });

            modelBuilder.Entity("CourseSignupSystemCode.Models.Student", b =>
                {
                    b.Navigation("Results");

                    b.Navigation("Schedules");

                    b.Navigation("Tuitions");
                });

            modelBuilder.Entity("CourseSignupSystemCode.Models.Subject", b =>
                {
                    b.Navigation("Schedules");

                    b.Navigation("ScoreTypeSubjects");

                    b.Navigation("TeachingSchedules");
                });

            modelBuilder.Entity("CourseSignupSystemCode.Models.Teacher", b =>
                {
                    b.Navigation("teachingSchedules");
                });

            modelBuilder.Entity("CourseSignupSystemCode.Models.TuitionType", b =>
                {
                    b.Navigation("Tuitions");
                });
#pragma warning restore 612, 618
        }
    }
}
